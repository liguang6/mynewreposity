<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.byd.wms.business.modules.returngoods.dao.WmsReturnGoodsDao">

	<select id="getBusinessNameListByWerks" parameterType="Map" resultType="String">
		SELECT DISTINCT BUSINESS_NAME FROM WMS_C_WMS_BUSINESS WHERE BUSINESS_CLASS = '05' 
		AND BUSINESS_CODE IN 
		(SELECT BUSINESS_CODE FROM WMS_C_PLANT_BUSINESS WHERE WERKS = #{WERKS})
	</select>
	
	<select id="getWmsOutReturnSapOutCount" parameterType="String" resultType="int">
	SELECT COUNT(*) FROM WMS_OUT_RETURN_ITEM WHERE SAP_OUT_NO = #{SAP_OUT_NO} AND DEL !='X'
	</select>
	
	<select id="getReceiveRoomOutReturnPrintData" parameterType="Map" resultType="Map">
	SELECT ROWNUM,H.RETURN_NO,H.WERKS,H.F_WERKS,P.BUKRS_NAME,H.CREATOR,H.CREATE_DATE,I.MATNR,I.MAKTX,I.UNIT,NVL(I.MO_NO,' ') MO_NO,
	NVL(I.COST_CENTER,' ') COST_CENTER,NVL(WI.WMS_NO,' ') WMS_NO,NVL(WH.MAT_DOC,' ') SAP_NO,NVL(WH.PZ_DATE,' ') PZ_DATE,NVL(WH.JZ_DATE,' ') JZ_DATE,
	NVL(I.LIFNR,' ') LIFNR,NVL(I.WBS,' ') WBS,NVL(I.RETURN_REASON_DESC,' ') RETURN_REASON_DESC,I.IO_NO,I.PO_NO,
	NVL(D.BATCH,' ') BATCH,NVL(D.F_BATCH,' ') F_BATCH,D.RETURN_QTY,NVL(I.RETURN_REASON_DESC,' ') RETURN_REASON_DESC,NVL(D.MEMO,' ') MEMO,I.LIFNR,
	I.LIKTX,H.HEADER_TXT,I.BUSINESS_NAME,I.SAP_OUT_NO,I.SAP_OUT_ITEM_NO,NVL(I.F_LGORT,' ') F_LGORT,NVL(D.LGORT,' ') LGORT,NVL(D.REAL_QTY,'0') REAL_QTY
	FROM WMS_OUT_RETURN_HEAD H
	LEFT JOIN WMS_OUT_RETURN_ITEM I ON H.RETURN_NO = I.RETURN_NO
	LEFT JOIN WMS_OUT_RETURN_ITEM_D D ON H.RETURN_NO = D.RETURN_NO AND I.RETURN_ITEM_NO = D.RETURN_ITEM_NO
	LEFT JOIN WMS_SAP_PLANT P ON H.WERKS = P.WERKS
	LEFT JOIN WMS_CORE_WMSDOC_ITEM WI ON WI.RETURN_NO = I.RETURN_NO AND WI.RETURN_ITEM_NO = I.RETURN_ITEM_NO
	LEFT JOIN WMS_CORE_WMSDOC_HEAD WH ON WH.WMS_NO = WI.WMS_NO
	-- LEFT JOIN WMS_CORE_SAPDOC_HEAD SH ON SH.REF_WMS_NO = WH.WMS_NO
	WHERE H.RETURN_NO = #{RETURN_NO}
	</select>
	
	<select id="getWareHouseOutReturnPrintData" parameterType="Map" resultType="Map">
	SELECT ROWNUM,I.PO_NO,I.PO_ITEM_NO,H.RETURN_NO,H.WERKS,H.F_WERKS,P.BUKRS_NAME,H.CREATOR,H.CREATE_DATE,
	I.MATNR,I.MAKTX,I.UNIT,NVL(D.BATCH,' ') BATCH,NVL(D.F_BATCH,' ') F_BATCH,D.RETURN_QTY,
	NVL(I.MO_NO,' ') MO_NO,I.SAP_OUT_NO,I.SAP_OUT_ITEM_NO,
	NVL(I.RETURN_REASON_DESC,' ') RETURN_REASON_DESC,NVL(D.MEMO,' ') MEMO,I.LIFNR,NVL(I.LIKTX,' ') LIKTX,H.HEADER_TXT,
	I.BUSINESS_NAME,I.SAP_OUT_NO,NVL(I.F_LGORT,' ') F_LGORT,NVL(D.LGORT,' ') LGORT,NVL(D.REAL_QTY,'0') REAL_QTY
	FROM WMS_OUT_RETURN_HEAD H
	LEFT JOIN WMS_OUT_RETURN_ITEM I ON H.RETURN_NO = I.RETURN_NO
	LEFT JOIN WMS_OUT_RETURN_ITEM_D D ON H.RETURN_NO = D.RETURN_NO AND I.RETURN_ITEM_NO = D.RETURN_ITEM_NO
	LEFT JOIN WMS_SAP_PLANT P ON H.WERKS = P.WERKS
	WHERE H.RETURN_NO = #{RETURN_NO}
	</select>
	
	<resultMap type="Map" id="ReceiveRoomOutDataMap">
		<result property="LABEL_NOS"  column="LABEL_NOS" jdbcType="CLOB" javaType = "java.lang.String" />
	</resultMap> 
	
	<select id="getReceiveRoomOutData" parameterType="Map" resultMap="ReceiveRoomOutDataMap">
	SELECT R.WERKS,R.MATNR,R.F_BATCH,S.BATCH,R.SOBKZ,R.LIFNR,R.RECEIPT_NO,R.RECEIPT_ITEM_NO,S.LGORT,
	B.BUSINESS_CODE,#{BUSINESSCODE} AS BUSINESS_NAME,R.BUSINESS_TYPE,
	R.WH_NUMBER,R.MAKTX,R.LIKTX,S.RH_QTY,M.XCHPF,
	(SELECT NVL(SUM(I.TOTAL_RETURN_QTY),0) AS RE_QTY FROM WMS_OUT_RETURN_ITEM I
	LEFT JOIN WMS_OUT_RETURN_ITEM_D D ON I.RETURN_NO = D.RETURN_NO AND I.RETURN_ITEM_NO = D.RETURN_ITEM_NO
	LEFT JOIN WMS_OUT_RETURN_HEAD OH ON I.RETURN_NO = OH.RETURN_NO
	WHERE OH.RETURN_TYPE = '04' AND I.WERKS = R.WERKS AND I.WH_NUMBER = R.WH_NUMBER
		AND I.MATNR = R.MATNR AND NVL(D.F_BATCH,'0') = NVL(R.F_BATCH,'0') AND D.BATCH = R.BATCH 
		AND D.SOBKZ = R.SOBKZ AND I.ITEM_STATUS = '00' AND I.DEL !='X') QTY1, --[创单数量]
	CASE WHEN R.TEST_FLAG = '02' THEN 	--[可退数量]质检标识=02：无需质检，退货数量=实收数量-退货数量-进仓数量-退货数量(退货单)
	(NVL(R.RECEIPT_QTY,0)-NVL(R.RETURN_QTY,0)-NVL(R.IN_QTY,0)-
		(SELECT NVL(SUM(I.TOTAL_RETURN_QTY),0) AS RE_QTY FROM WMS_OUT_RETURN_ITEM I 
		LEFT JOIN WMS_OUT_RETURN_ITEM_D D ON I.RETURN_NO = D.RETURN_NO AND I.RETURN_ITEM_NO = D.RETURN_ITEM_NO
		WHERE I.WERKS = R.WERKS AND I.WH_NUMBER = R.WH_NUMBER
		AND I.MATNR = R.MATNR AND NVL(D.F_BATCH,'0') = NVL(R.F_BATCH,'0') AND D.BATCH = R.BATCH AND D.SOBKZ = R.SOBKZ AND I.ITEM_STATUS = '00' AND I.DEL !='X')
	)
	ELSE 								--[可退数量]质检标识=00：质检、01免检，可退数量=可退数量-退货数量(退货单)
	(NVL(R.RETURNABLE_QTY,0) -  
		(SELECT NVL(SUM(I.TOTAL_RETURN_QTY),0) AS RE_QTY FROM WMS_OUT_RETURN_ITEM I 
		LEFT JOIN WMS_OUT_RETURN_ITEM_D D ON I.RETURN_NO = D.RETURN_NO AND I.RETURN_ITEM_NO = D.RETURN_ITEM_NO
		WHERE I.WERKS = R.WERKS AND I.WH_NUMBER = R.WH_NUMBER
		AND I.MATNR = R.MATNR AND NVL(D.F_BATCH,'0') = NVL(R.F_BATCH,'0') AND D.BATCH = R.BATCH AND D.SOBKZ = R.SOBKZ AND I.ITEM_STATUS = '00' AND I.DEL !='X')
	)
	END QTY2,
	CASE WHEN R.TEST_FLAG = '02' THEN 	--[可退数量]质检标识=02：无需质检，退货数量=实收数量-退货数量-进仓数量-退货数量(退货单)
	(NVL(R.RECEIPT_QTY,0)-NVL(R.RETURN_QTY,0)-NVL(R.IN_QTY,0)-
		(SELECT NVL(SUM(I.TOTAL_RETURN_QTY),0) AS RE_QTY FROM WMS_OUT_RETURN_ITEM I 
		LEFT JOIN WMS_OUT_RETURN_ITEM_D D ON I.RETURN_NO = D.RETURN_NO AND I.RETURN_ITEM_NO = D.RETURN_ITEM_NO
		WHERE I.WERKS = R.WERKS AND I.WH_NUMBER = R.WH_NUMBER
		AND I.MATNR = R.MATNR AND NVL(D.F_BATCH,'0') = NVL(R.F_BATCH,'0') AND D.BATCH = R.BATCH AND D.SOBKZ = R.SOBKZ AND I.ITEM_STATUS = '00' AND I.DEL !='X')
	)
	ELSE 								--[可退数量]质检标识=00：质检、01免检，可退数量=可退数量-退货数量(退货单)
	(NVL(R.RETURNABLE_QTY,0) - 
		(SELECT NVL(SUM(I.TOTAL_RETURN_QTY),0) AS RE_QTY FROM WMS_OUT_RETURN_ITEM I 
		LEFT JOIN WMS_OUT_RETURN_ITEM_D D ON I.RETURN_NO = D.RETURN_NO AND I.RETURN_ITEM_NO = D.RETURN_ITEM_NO
		WHERE I.WERKS = R.WERKS AND I.WH_NUMBER = R.WH_NUMBER
		AND I.MATNR = R.MATNR AND NVL(D.F_BATCH,'0') = NVL(R.F_BATCH,'0') AND D.BATCH = R.BATCH AND D.SOBKZ = R.SOBKZ AND I.ITEM_STATUS = '00' AND I.DEL !='X')
	)
	END QTY3,
	--工厂+仓库号+料号+源批次+WMS批次+特殊库存类型+供应商代码+收货单号+收货单行项目号” 去【条码表-WMS_CORE_LABEL】中找到对应的状态为可退货且DEL≠X的条码
	(SELECT NVL(WMSYS.WM_CONCAT(L.LABEL_NO),' ') LABEL_NOS FROM WMS_CORE_LABEL L 
	WHERE L.RECEIPT_NO = R.RECEIPT_NO AND L.RECEIPT_ITEM_NO = R.RECEIPT_ITEM_NO AND L.DEL != 'X') LABEL_NOS,
	R.UNIT,R.SOBKZ,R.PO_NO,R.PO_ITEM_NO,R.ASNNO,R.ASNITM,R.RECEIPT_DATE,R.TEST_FLAG,W.BARCODE_FLAG,
	
	(SELECT COUNT(*) FROM WMS_C_PLANT_BUSINESS WHERE WERKS = R.WERKS AND BUSINESS_CODE IN 
	(SELECT BUSINESS_CODE FROM WMS_C_WMS_BUSINESS WHERE BUSINESS_CLASS = '04')) PC_COUNT,
	WI.WMS_SAP_MAT_DOC,NVL(SH.DOC_YEAR,' ') REF_SAP_MATDOC_YEAR
	FROM WMS_IN_RECEIPT R 
	LEFT JOIN WMS_IN_RH_STOCK S ON S.WERKS = R.WERKS AND S.WH_NUMBER = R.WH_NUMBER AND S.DEL != 'X' AND S.MATNR = R.MATNR AND S.BATCH = R.BATCH  AND S.LGORT = R.LGORT AND S.SOBKZ = R.SOBKZ AND NVL(S.LIFNR,'0') = NVL(R.LIFNR,'0')  AND (NVL(S.F_BATCH,'0') = NVL(R.F_BATCH,'0') OR S.F_BATCH IS NULL) 
	-- 获取退货业务类型
	LEFT JOIN WMS_C_WMS_BUSINESS B ON B.BUSINESS_CLASS='04' AND B.BUSINESS_NAME = #{BUSINESSCODE} AND R.BUSINESS_TYPE = B.BUSINESS_TYPE AND R.SOBKZ = B.SOBKZ 
	LEFT JOIN WMS_SAP_MATERIAL M ON M.MATNR = R.MATNR AND M.WERKS = R.WERKS	
	AND S.BATCH = R.BATCH AND S.SOBKZ = R.SOBKZ AND S.LIFNR = R.LIFNR
	LEFT JOIN WMS_C_WH W ON R.WERKS = W.WERKS AND R.WH_NUMBER = W.WH_NUMBER	
	LEFT JOIN WMS_CORE_WMSDOC_ITEM WI ON R.RECEIPT_NO = WI.RECEIPT_NO AND R.RECEIPT_ITEM_NO = WI.RECEIPT_ITEM_NO AND WI.SAP_MOVE_TYPE = '103'
	LEFT JOIN WMS_CORE_SAPDOC_HEAD SH ON WI.WMS_NO = SH.REF_WMS_NO
	WHERE 1=1 AND NVL(R.DEL,'0')='0' 
	AND 
	( 	--质检标识=00：质检、01免检，且可退数量 >0
	(R.TEST_FLAG != '02' AND (NVL(R.RETURNABLE_QTY,0) - 
		(SELECT NVL(SUM(I.TOTAL_RETURN_QTY),0) AS RE_QTY FROM WMS_OUT_RETURN_ITEM I 
		LEFT JOIN WMS_OUT_RETURN_ITEM_D D ON I.RETURN_NO = D.RETURN_NO AND I.RETURN_ITEM_NO = D.RETURN_ITEM_NO
		WHERE I.WERKS = R.WERKS AND I.WH_NUMBER = R.WH_NUMBER
		AND I.MATNR = R.MATNR AND NVL(D.F_BATCH,'0') = NVL(R.F_BATCH,'0') AND D.BATCH = R.BATCH AND D.SOBKZ = R.SOBKZ AND I.ITEM_STATUS = '00' AND I.DEL !='X')
		 >0)) 	
	OR 	--质检标识=02：无需质检，且（实收数量-退货数量-进仓数量）>0
	(R.TEST_FLAG = '02' AND (NVL(R.RECEIPT_QTY,0) - NVL(R.RETURN_QTY,0) - NVL(R.IN_QTY,0)) -
		(SELECT NVL(SUM(I.TOTAL_RETURN_QTY),0) AS RE_QTY FROM WMS_OUT_RETURN_ITEM I 
		LEFT JOIN WMS_OUT_RETURN_ITEM_D D ON I.RETURN_NO = D.RETURN_NO AND I.RETURN_ITEM_NO = D.RETURN_ITEM_NO
		WHERE I.WERKS = R.WERKS AND I.WH_NUMBER = R.WH_NUMBER
		AND I.MATNR = R.MATNR AND NVL(D.F_BATCH,'0') = NVL(R.F_BATCH,'0') AND D.BATCH = R.BATCH AND D.SOBKZ = R.SOBKZ AND I.ITEM_STATUS = '00' AND I.DEL !='X')
		>0)	
	)
	AND R.BUSINESS_TYPE IN (
	SELECT CODE FROM SYS_DICT WHERE "TYPE" = 'BUSINESS_TYPE' AND DEL_FLAG !='X' AND CODE IN (
	SELECT DISTINCT BUSINESS_TYPE FROM WMS_C_WMS_BUSINESS WHERE
	BUSINESS_NAME = ${BUSINESS_CODE})
	)
	
	<if test="WERKS !=null and WERKS !=''">
	AND R.WERKS = #{WERKS}
	</if>
	<if test="F_WERKS !=null and F_WERKS !=''">
	AND R.F_WERKS = #{F_WERKS}
	</if>
	<if test="WH_NUMBER !=null and WH_NUMBER !=''">
	AND R.WH_NUMBER = #{WH_NUMBER}
	</if>
	<if test="BUSINESS_CODE =='27'">
	AND R.SOBKZ = 'Z'
	</if>
	<if test="LIFNR !=null and LIFNR !=''">
	AND R.LIFNR = #{LIFNR}
	</if>
	<if test="MATNR !=null and MATNR !='(\'\')'">
	AND R.MATNR IN ${MATNR}
	</if>
	<if test="DATESTART !=null and DATESTART !=''">
	AND R.RECEIPT_DATE >= #{DATESTART}
	</if>
	<if test="DATEEND !=null and DATEEND !=''">
	AND R.RECEIPT_DATE &lt;= CONCAT(#{DATEEND},' 23:59:59')
	</if>
	AND NVL(S.RH_QTY,0) >0
	ORDER BY R.MATNR,R.SOBKZ,R.LIFNR,R.BATCH
	</select>
	
	<update id="updateLabelsStatus" parameterType="Map">
	UPDATE WMS_CORE_LABEL SET LABEL_STATUS = #{LABEL_STATUS}
	WHERE 1=1
	<if test="LABELS != null and LABELS.size() > 0">
	 AND 
		<foreach collection="LABELS" item="l" open="(" close=")" separator="OR">
			LABEL_NO = #{l}
		</foreach>
	</if>
	</update>
	
	<select id="getTestFlagByWerksBusinessCode" parameterType="Map" resultType="String">
	SELECT TEST_FLAG FROM WMS_C_QC_PLANT WHERE WERKS = #{WERKS} AND 
	BUSINESS_NAME = (SELECT CODE FROM SYS_DICT WHERE "TYPE" = 'BUSINESS_NAME' AND VALUE = #{BUSINESS_NAME})
	</select>
	
	<select id="getSapPoInfo" parameterType="Map" resultType="Map">
	SELECT * FROM WMS_SAP_PO_ITEM I WHERE I.EBELN = #{PO_NO}
	</select>
	<select id="getSapPoBarcodeInfo" parameterType="Map" resultType="Map">
	SELECT L.ID LID,I.ID IID,L.LABEL_NO,L.BOX_SN,L.BOX_QTY,L.LGORT,L.MATNR,L.MAKTX,L.UNIT,L.SOBKZ,
	L.BATCH,L.LIFNR,L.LIKTX
	FROM WMS_CORE_LABEL L 
	LEFT JOIN WMS_SAP_PO_ITEM I ON I.WERKS = L.WERKS AND I.LGORT = L.LGORT AND I.MATNR = L.MATNR AND I.SOBKZ = L.SOBKZ 
	WHERE L.LABEL_NO = #{Barcode} AND I.EBELN = #{PO_NO}
	</select>
	
	<insert id="insertWmsOutReturnHead" parameterType="map">
	INSERT INTO WMS_OUT_RETURN_HEAD (ID,RETURN_NO,RETURN_TYPE,RETURN_STATUS,
	F_WERKS,WERKS,F_WH_NUMBER,WH_NUMBER,LIFNR,
	LIKTX,HEADER_TXT,IS_AUTO,DEL,CREATOR,
	CREATE_DATE,EDITOR,EDIT_DATE)
	VALUES(SEQ_WMS_OUT_RETURN_HEAD.nextval,#{RETURN_NO},#{RETURN_TYPE},#{RETURN_STATUS},
	#{F_WERKS},#{WERKS},#{F_WH_NUMBER},#{WH_NUMBER},#{LIFNR},
	#{LIKTX},#{HEADER_TXT},#{IS_AUTO},#{DEL},#{CREATOR},
	#{CREATE_DATE},#{EDITOR},#{EDIT_DATE})
	</insert>
	<insert id="insertWmsOutReturnItem" parameterType="map">
	INSERT INTO WMS_OUT_RETURN_ITEM
	(ID, RETURN_NO, RETURN_ITEM_NO, BUSINESS_NAME, BUSINESS_TYPE, 
	WERKS, WH_NUMBER, F_LGORT, MATNR, MAKTX, 
	UNIT, TOTAL_RETURN_QTY, RETURN_PEOPLE, RETURN_REASON_DESC, ITEM_STATUS, 
	MEMO, RECEIPT_NO, RECEIPT_ITEM_NO, LIFNR, LIKTX, 
	PO_NO, PO_ITEM_NO, SAP_OUT_NO, SAP_OUT_ITEM_NO, MO_NO, 
	MO_ITEM_NO, RSNUM, RSPOS, COST_CENTER, IO_NO, 
	WBS, SAP_MATDOC_NO, SAP_MATDOC_ITEM_NO, INBOUND_NO, INBOUND_ITEM_NO, 
	SQE, PICK_FLAG, DEL, CREATOR, CREATE_DATE, 
	EDITOR, EDIT_DATE,LABEL_NO,REF_SAP_MATDOC_NO,REF_SAP_MATDOC_ITEM_NO,REF_SAP_MATDOC_YEAR)
	VALUES(SEQ_WMS_OUT_RETURN_ITEM.nextval,#{RETURN_NO},#{RETURN_ITEM_NO},#{BUSINESS_NAME},#{BUSINESS_TYPE},
	#{WERKS},#{WH_NUMBER},#{F_LGORT},#{MATNR},#{MAKTX},
	#{UNIT},#{TOTAL_RETURN_QTY},#{RETURN_PEOPLE},#{RETURN_REASON_DESC},#{ITEM_STATUS},
	#{MEMO},#{RECEIPT_NO},#{RECEIPT_ITEM_NO},#{LIFNR},#{LIKTX},
	#{PO_NO},#{PO_ITEM_NO},#{SAP_OUT_NO},#{SAP_OUT_ITEM_NO},#{MO_NO},
	#{MO_ITEM_NO},#{RSNUM},#{RSPOS},#{COST_CENTER},#{IO_NO},
	#{WBS},#{SAP_MATDOC_NO},#{SAP_MATDOC_ITEM_NO},#{INBOUND_NO},#{INBOUND_ITEM_NO},
	#{SQE},#{PICK_FLAG},#{DEL},#{CREATOR},#{CREATE_DATE},
	#{EDITOR},#{EDIT_DATE},#{LABEL_NO},#{REF_SAP_MATDOC_NO},#{REF_SAP_MATDOC_ITEM_NO},#{REF_SAP_MATDOC_YEAR})
	</insert>
	<insert id="insertWmsOutReturnItemDetail" parameterType="map">
	INSERT INTO WMS_OUT_RETURN_ITEM_D
	(ID, RETURN_NO, RETURN_ITEM_NO, MATNR, LGORT, 
	F_BATCH, BATCH, RETURN_QTY, LIFNR, SOBKZ, 
	BIN_CODE, BIN_CODE_XJ, XJ_QTY, REAL_QTY, ITEM_TEXT, 
	RETURN_PEOPLE, MEMO, DEL, CREATOR, CREATE_DATE, 
	EDITOR, EDIT_DATE,LABEL_NO)
	VALUES(SEQ_WMS_OUT_RETURN_ITEM_D.nextval,#{RETURN_NO},#{RETURN_ITEM_NO},#{MATNR},#{LGORT},
	#{F_BATCH},#{BATCH},#{RETURN_QTY},#{LIFNR},#{SOBKZ},
	#{BIN_CODE},#{BIN_CODE_XJ},#{XJ_QTY},#{REAL_QTY},#{ITEM_TEXT},
	#{RETURN_PEOPLE},#{MEMO},#{DEL},#{CREATOR},#{CREATE_DATE},
	#{EDITOR},#{EDIT_DATE},#{LABEL_NO})
	</insert>
	
	<resultMap type="Map" id="ReceiveRoomOutReturnDataMap">
		<result property="LABEL_NO"  column="LABEL_NO" jdbcType="CLOB" javaType = "java.lang.String" />
	</resultMap> 
	
	<select id="getReceiveRoomOutReturnData" parameterType="Map" resultMap="ReceiveRoomOutReturnDataMap">
	SELECT H.RETURN_NO,I.MATNR,I.MAKTX,I.TOTAL_RETURN_QTY,I.TOTAL_RETURN_QTY AS QTY2,D.BATCH,I.UNIT,D.SOBKZ,
	H.LIFNR,H.LIKTX,H.F_WERKS,I.WERKS,I.RECEIPT_NO,I.RECEIPT_ITEM_NO,H.DEL,H.RETURN_STATUS,B.SAP_MOVE_TYPE,
	B.WMS_MOVE_TYPE,P.SYN_FLAG,H.ID AS HID,H.F_WERKS,V.VENDOR_MANAGER,
	I.ID AS IID,D.ID AS DID,I.BUSINESS_TYPE,I.ITEM_STATUS,
	B.BUSINESS_CODE,(I.LABEL_NO) LABEL_NO,
	I.BUSINESS_NAME,D.F_BATCH,I.WH_NUMBER,D.LGORT,I.PO_NO,I.PO_ITEM_NO,I.IO_NO,
	I.WBS,I.MO_NO,I.MO_ITEM_NO,I.RSNUM,I.RSPOS,I.SAP_OUT_NO,I.SAP_OUT_ITEM_NO,I.RETURN_ITEM_NO,B.BUSINESS_CLASS,
	I.REF_SAP_MATDOC_NO,I.REF_SAP_MATDOC_ITEM_NO,I.REF_SAP_MATDOC_YEAR,
	QP.TEST_FLAG,WH.BARCODE_FLAG,NVL(M.XCHPF,'0') XCHPF,R.ASNNO,R.ASNITM
	FROM WMS_OUT_RETURN_HEAD H 
	LEFT JOIN WMS_OUT_RETURN_ITEM I ON H.RETURN_NO = I.RETURN_NO
	LEFT JOIN WMS_OUT_RETURN_ITEM_D D ON D.RETURN_NO = I.RETURN_NO AND D.RETURN_ITEM_NO = I.RETURN_ITEM_NO
	LEFT JOIN WMS_C_WMS_BUSINESS B ON I.BUSINESS_NAME = B.BUSINESS_NAME AND I.BUSINESS_TYPE = B.BUSINESS_TYPE
	AND B.SOBKZ = D.SOBKZ AND B.BUSINESS_CLASS = '04'
	LEFT JOIN WMS_C_PLANT_BUSINESS P ON H.WERKS = P.WERKS AND B.BUSINESS_CODE = P.BUSINESS_CODE
	LEFT JOIN WMS_C_VENDOR V ON V.WERKS = H.WERKS AND V.LIFNR=H.LIFNR AND V.DEL_FLAG != 'X'
	LEFT JOIN WMS_C_QC_PLANT QP ON H.WERKS = QP.WERKS AND I.BUSINESS_NAME = QP.BUSINESS_NAME
	LEFT JOIN WMS_C_WH WH ON H.WERKS = WH.WERKS AND H.WH_NUMBER = WH.WH_NUMBER
	LEFT JOIN WMS_SAP_MATERIAL M ON M.WERKS = H.WERKS AND M.MATNR = I.MATNR
	LEFT JOIN WMS_IN_RECEIPT R ON I.RECEIPT_NO = R.RECEIPT_NO AND I.RECEIPT_ITEM_NO = R.RECEIPT_ITEM_NO
	WHERE H.RETURN_NO = #{RETURN_NO} AND H.WERKS = #{WERKS} AND H.WH_NUMBER = #{WH_NUMBER}
	ORDER BY I.SAP_OUT_NO,I.SAP_OUT_ITEM_NO
	</select>
	
	<resultMap type="Map" id="WareHouseOutReturnDataMap">
		<result property="LABEL_NO"  column="LABEL_NO" jdbcType="CLOB" javaType = "java.lang.String" />
	</resultMap> 
	<select id="getWareHouseOutReturnData" parameterType="Map" resultMap="WareHouseOutReturnDataMap">
	SELECT I.RETURN_NO,I.RETURN_ITEM_NO,I.MATNR,I.MAKTX,D.RETURN_QTY,D.ITEM_TEXT,
	I.UNIT,D.SOBKZ,D.LGORT,H.LIFNR,H.LIKTX,I.PO_NO,I.PO_ITEM_NO,NVL(P.ID,0) AS P_ID,NVL(D.XJ_QTY,0) AS P_QTY,NVL(D.XJ_QTY,0) AS QTY1,
	I.ITEM_STATUS,H.RETURN_STATUS,H.WERKS,H.WH_NUMBER,V.VENDOR_MANAGER,I.BUSINESS_NAME,I.BUSINESS_TYPE,B.BUSINESS_CLASS,
	B.SAP_MOVE_TYPE,B.WMS_MOVE_TYPE,I.WBS,I.MO_NO,I.MO_ITEM_NO,I.RSNUM,I.RSPOS,I.SAP_OUT_NO,I.SAP_OUT_ITEM_NO,
	I.IO_NO,I.ID AS IID,H.ID AS HID,D.ID AS DID,D.BATCH,NVL(AREA.STORAGE_CAPACITY_FLAG,'0') STORAGE_CAPACITY_FLAG,
	BIN.STORAGE_AREA_CODE,D.BIN_CODE,NVL(S.QTY,0) AS STORAGE_QTY,(I.LABEL_NO) LABEL_NO,
	I.PO_NO,I.PO_ITEM_NO,NVL(P.MEINS,I.UNIT) MEINS,NVL(P.LMEIN,I.UNIT) LMEIN,NVL(P.UMREN,'1') UMREN,NVL(P.UMREZ,'1') UMREZ,
	R.ASNNO,R.ASNITM,I.RECEIPT_NO,I.RECEIPT_ITEM_NO
	FROM WMS_OUT_RETURN_ITEM_D D
	LEFT JOIN WMS_OUT_RETURN_ITEM I ON D.RETURN_NO = I.RETURN_NO AND D.RETURN_ITEM_NO = I.RETURN_ITEM_NO
	LEFT OUTER JOIN WMS_OUT_RETURN_HEAD H ON I.RETURN_NO = H.RETURN_NO
	LEFT OUTER JOIN WMS_OUT_PICKING P ON P.REFERENCE_DELIVERY_NO = I.RETURN_NO AND P.REFERENCE_DELIVERY_ITEM = I.RETURN_ITEM_NO AND P.DEL IS NULL
	LEFT JOIN WMS_C_WMS_BUSINESS B ON I.BUSINESS_NAME = B.BUSINESS_NAME AND I.BUSINESS_TYPE = B.BUSINESS_TYPE
		AND B.SOBKZ = D.SOBKZ AND B.BUSINESS_CLASS = '05'
	LEFT JOIN WMS_C_VENDOR V ON V.WERKS = H.WERKS AND V.LIFNR=H.LIFNR AND V.DEL_FLAG != 'X'	
	LEFT JOIN WMS_CORE_WH_BIN BIN ON BIN.WH_NUMBER = H.WH_NUMBER AND BIN.BIN_CODE = D.BIN_CODE AND BIN.DEL != 'X'
	LEFT JOIN WMS_CORE_WH_AREA AREA ON BIN.STORAGE_AREA_CODE = AREA.STORAGE_AREA_CODE AND AREA.WH_NUMBER = H.WH_NUMBER AND AREA.DEL != 'X'
	LEFT JOIN WMS_C_MAT_STORAGE S ON H.WERKS = S.WERKS AND H.WH_NUMBER = S.WH_NUMBER AND I.MATNR = S.MATNR AND S.DEL != 'X'
	LEFT JOIN WMS_SAP_PO_ITEM P ON P.EBELN = I.PO_NO AND P.EBELP = I.PO_ITEM_NO
	LEFT JOIN WMS_IN_RECEIPT R ON I.RECEIPT_NO = R.RECEIPT_NO AND I.RECEIPT_ITEM_NO = R.RECEIPT_ITEM_NO
	WHERE I.RETURN_NO = #{RETURN_NO} AND H.WERKS = #{WERKS} AND H.WH_NUMBER =#{WH_NUMBER}
	ORDER BY I.RETURN_ITEM_NO
	</select>
	
	<update id="updateWhBinStorageUnit">
	UPDATE WMS_CORE_WH_BIN SET U_STORAGE_UNIT = NVL(U_STORAGE_UNIT,0) - #{U_QTY} 
	WHERE WH_NUMBER = #{WH_NUMBER} AND STORAGE_AREA_CODE = #{STORAGE_AREA_CODE} AND BIN_CODE = #{BIN_CODE}
	</update>
	
	<update id="updateReceiveRoomOutReturnHeadStatus" parameterType="Map">
	UPDATE WMS_OUT_RETURN_HEAD SET RETURN_STATUS = #{RETURN_STATUS} WHERE RETURN_NO = #{RETURN_NO}
	</update>
	<update id="updateOutReturnHeadStatus" parameterType="Map">	
	UPDATE WMS_OUT_RETURN_HEAD SET RETURN_STATUS = 
	CASE WHEN 0 = (SELECT  NVL(SUM(D.XJ_QTY),0)  FROM WMS_OUT_RETURN_ITEM I 
	LEFT JOIN WMS_OUT_RETURN_ITEM_D D ON D.RETURN_NO = I.RETURN_NO AND D.RETURN_ITEM_NO = I.RETURN_ITEM_NO
	AND D.RETURN_ITEM_NO = I.RETURN_ITEM_NO WHERE I.RETURN_NO = #{RETURN_NO})
	THEN '00'
	ELSE
		CASE WHEN 0 = 
		(SELECT NVL(SUM(I.TOTAL_RETURN_QTY),0) - NVL(SUM(D.XJ_QTY),0) FROM WMS_OUT_RETURN_ITEM I 
		LEFT JOIN WMS_OUT_RETURN_ITEM_D D ON D.RETURN_NO = I.RETURN_NO AND D.RETURN_ITEM_NO = I.RETURN_ITEM_NO
		WHERE I.RETURN_NO = #{RETURN_NO})
		THEN '02' ELSE '01' END
	END
	WHERE RETURN_NO = #{RETURN_NO}
	</update>
	<update id="updateOutReturnItemStatus" parameterType="Map">	
	UPDATE WMS_OUT_RETURN_ITEM SET ITEM_STATUS = #{ITEM_STATUS} WHERE ID = #{IID}
	</update>
	<update id="updateOutReturnItemDRealQty" parameterType="Map">	
	UPDATE WMS_OUT_RETURN_ITEM_D SET REAL_QTY = #{REAL_QTY} WHERE ID = #{DID}
	</update>
	<update id="updateOutReturnItemDXJQty" parameterType="Map">	
	UPDATE WMS_OUT_RETURN_ITEM_D SET XJ_QTY = #{XJ_QTY},BIN_CODE_XJ=#{BIN_CODE_XJ} 
	<if test="BIN_CODE !=null and BIN_CODE !=''">
	,BIN_CODE=#{BIN_CODE} 
	</if>
	WHERE ID = #{DID}
	</update>
	
	<update id="updateReceipt" parameterType="Map">	
	UPDATE WMS_IN_RECEIPT SET RETURNABLE_QTY = NVL(RETURNABLE_QTY,0) - ${REAL_QTY},
	RETURN_QTY = NVL(RETURN_QTY,0) + ${REAL_QTY}
	WHERE RECEIPT_NO = #{RECEIPT_NO} AND RECEIPT_ITEM_NO = #{RECEIPT_ITEM_NO}
	</update>
	<update id="updateRHStock" parameterType="Map">	
	UPDATE WMS_IN_RH_STOCK SET RH_QTY = RH_QTY-${REAL_QTY} , DEL = (
	CASE WHEN 0=RH_QTY-${REAL_QTY} THEN 'X' ELSE '0' END
	) WHERE WERKS = #{WERKS} AND WH_NUMBER = #{WH_NUMBER} AND MATNR = #{MATNR}
	AND BATCH = #{BATCH}
	<if test="LGORT !=null and LGORT !=''">
	AND NVL(LGORT,'') = #{LGORT}
	</if>
	<if test="SOBKZ !=null and SOBKZ !=''">
	AND NVL(SOBKZ,'Z') = #{SOBKZ}
	</if>
	<if test="LIFNR !=null and LIFNR !=''">
	AND NVL(LIFNR,'') = #{LIFNR}
	</if>
	<if test="F_BATCH !=null and F_BATCH !=''">
	AND NVL(F_BATCH,'') = #{F_BATCH}
	</if>
	</update>
	<delete id="deleteRHZeroStock" parameterType="Map">
	DELETE FROM WMS_IN_RH_STOCK WHERE RH_QTY = #{REAL_QTY} AND WERKS = #{WERKS} AND WH_NUMBER = #{WH_NUMBER} AND MATNR = #{MATNR}
	AND BATCH = #{BATCH}
	<if test="LGORT !=null and LGORT !=''">
	AND NVL(LGORT,'') = #{LGORT}
	</if>
	<if test="SOBKZ !=null and SOBKZ !=''">
	AND NVL(SOBKZ,'Z') = #{SOBKZ}
	</if>
	<if test="LIFNR !=null and LIFNR !=''">
	AND NVL(LIFNR,'') = #{LIFNR}
	</if>
	<if test="F_BATCH !=null and F_BATCH !=''">
	AND NVL(F_BATCH,'') = #{F_BATCH}
	</if>
	</delete>
	<select id="getRHStockRhQty" parameterType="Map" resultType="int">
	SELECT NVL(MAX(RH_QTY),0) RH_QTY FROM WMS_IN_RH_STOCK WHERE WERKS = #{WERKS} AND WH_NUMBER = #{WH_NUMBER} AND MATNR = #{MATNR}
	AND BATCH = #{BATCH}
	<if test="LGORT !=null and LGORT !=''">
	AND NVL(LGORT,'') = #{LGORT}
	</if>
	<if test="SOBKZ !=null and SOBKZ !=''">
	AND NVL(SOBKZ,'Z') = #{SOBKZ}
	</if>
	<if test="LIFNR !=null and LIFNR !=''">
	AND NVL(LIFNR,'') = #{LIFNR}
	</if>
	<if test="F_BATCH !=null and F_BATCH !=''">
	AND NVL(F_BATCH,'') = #{F_BATCH}
	</if>
	</select>
	
	<select id="getSapPoData" parameterType="Map" resultType="Map">
	SELECT I.WERKS,I.MATNR,I.MENGE,I.SOBKZ,H.LIFNR,H.BSTYP,NVL(H.FRGRL,'0') AS FRGRL,NVL(I.RETPO,'0') AS RETPO,I.EBELP
	FROM WMS_SAP_PO_HEAD H 
	LEFT JOIN WMS_SAP_PO_ITEM I ON H.EBELN = I.EBELN
	WHERE H.EBELN = #{PONO} AND I.WERKS = #{WERKS} AND I.LOEKZ IS NULL AND (I.ELIKZ != 'X' OR I.ELIKZ IS NULL)
	</select>
	<select id="getWareHouseOutData29" parameterType="Map" resultType="Map">
	SELECT S.MATNR,S.MAKTX,S.FREEZE_QTY,S.BATCH,S.BIN_CODE,S.LGORT,'' AS MEMO,NVL(S.MEINS,'0') MEINS,
	NVL(I.MEINS,'0') AS UNIT,S.SOBKZ,
	S.F_BATCH,I.EBELP,S.LIFNR,S.LIKTX,S.FREEZE_QTY AS QTY1,I.UMREN,I.UMREZ,
	(SELECT COUNT(*) FROM WMS_C_PLANT_BUSINESS WHERE WERKS = S.WERKS AND  BUSINESS_CODE IN 
	(SELECT BUSINESS_CODE FROM WMS_C_WMS_BUSINESS WHERE BUSINESS_CLASS = '05')) PC_COUNT,
	#{PONO} AS PONO,I.BEDNR,I.EBELN,W.BARCODE_FLAG FROM WMS_CORE_STOCK S
	LEFT JOIN WMS_SAP_PO_ITEM I ON I.MATNR = S.MATNR AND I.SOBKZ = S.SOBKZ
	LEFT JOIN WMS_C_WH W ON S.WERKS = W.WERKS AND S.WH_NUMBER = W.WH_NUMBER
	WHERE S.WERKS = #{WERKS} AND S.WH_NUMBER = #{WH_NUMBER} 
	AND ((S.MATNR = #{MATNR} AND S.SOBKZ = #{SOBKZ}))
	AND S.LIFNR = #{LIFNR} AND I.EBELN = #{PONO} AND I.EBELP = #{EBELP}
	<if test="LGORT !=null and LGORT !=''">
	AND S.LGORT = #{LGORT} 
	</if>
	AND NVL(S.FREEZE_QTY,0) >0
	</select>
	<select id="getWareHouseOutData29Group" parameterType="Map" resultType="Map">
	SELECT I.* ,H.LIFNR,
	NVL((
	SELECT SUM(	--行项目状态 00创建  02下架  03完成
	CASE WHEN OI.ITEM_STATUS = '00' OR OI.ITEM_STATUS = '02' THEN OD.RETURN_QTY
	WHEN OI.ITEM_STATUS = '03' THEN OD.REAL_QTY
	END) QTY1 FROM WMS_OUT_RETURN_ITEM_D OD
	LEFT JOIN WMS_OUT_RETURN_ITEM OI ON OD.RETURN_NO = OI.RETURN_NO AND OD.RETURN_ITEM_NO = OI.RETURN_ITEM_NO
	LEFT JOIN WMS_OUT_RETURN_HEAD OH ON OD.RETURN_NO = OH.RETURN_NO
	WHERE OH.RETURN_TYPE = '05' AND OI.MATNR = I.MATNR AND OD.SOBKZ = I.SOBKZ AND OI.PO_NO = I.EBELN AND OI.PO_ITEM_NO = I.EBELP AND OI.DEL != 'X'
	),0) QTY1, --已创单数量	
	NVL((SELECT SUM(S.FREEZE_QTY) FROM WMS_CORE_STOCK S 
	WHERE S.WERKS = #{WERKS} AND S.WH_NUMBER = #{WH_NUMBER}  AND ((S.MATNR = I.MATNR AND S.SOBKZ = I.SOBKZ))
	<if test="LGORT !=null and LGORT !=''">
	AND S.LGORT = #{LGORT} 
	</if>
	AND S.LIFNR = H.LIFNR
	),0) FREEZE_QTY,	--冻结数量
	NVL((SELECT DISTINCT S.MEINS FROM WMS_CORE_STOCK S 
	WHERE S.WERKS = #{WERKS} AND S.WH_NUMBER = #{WH_NUMBER}  AND ((S.MATNR = I.MATNR AND S.SOBKZ = I.SOBKZ))
	<if test="LGORT !=null and LGORT !=''">
	AND S.LGORT = #{LGORT} 
	</if>
	AND S.LIFNR = H.LIFNR
	),0) S_UNIT,
	NVL((SELECT SUM(NVL(OD.RETURN_QTY,0)) FROM WMS_OUT_RETURN_ITEM_D OD
	LEFT JOIN WMS_OUT_RETURN_ITEM OI ON OD.RETURN_NO = OI.RETURN_NO AND OD.RETURN_ITEM_NO = OI.RETURN_ITEM_NO
	WHERE OI.PO_NO = I.EBELN AND OI.PO_ITEM_NO = I.EBELP AND OI.ITEM_STATUS = '00' AND OI.DEL !='X'),0) RETURN_QTY
	FROM WMS_SAP_PO_ITEM I LEFT JOIN WMS_SAP_PO_HEAD H ON I.EBELN = H.EBELN WHERE I.EBELN = #{PONO} 
	AND I.RETPO = 'X'
	ORDER BY I.EBELP
	</select>
	
	<resultMap type="Map" id="WareHouseOutData28GroupMap">
		<result property="BATCHS"  column="BATCHS" jdbcType="CLOB" javaType = "java.lang.String" />
	</resultMap> 
	<select id="getWareHouseOutData28Group" parameterType="Map" resultMap="WareHouseOutData28GroupMap">
	SELECT I.* ,H.LIFNR,
	NVL((
	SELECT SUM(	--行项目状态 00创建  02下架  03完成
	CASE WHEN OI.ITEM_STATUS = '00' OR OI.ITEM_STATUS = '02' THEN OD.RETURN_QTY
	WHEN OI.ITEM_STATUS = '03' THEN OD.REAL_QTY
	END) QTY1 FROM WMS_OUT_RETURN_ITEM_D OD
	LEFT JOIN WMS_OUT_RETURN_ITEM OI ON OD.RETURN_NO = OI.RETURN_NO AND OD.RETURN_ITEM_NO = OI.RETURN_ITEM_NO
	LEFT JOIN WMS_OUT_RETURN_HEAD OH ON OD.RETURN_NO = OH.RETURN_NO
	WHERE OH.RETURN_TYPE = '05' AND OI.MATNR = I.MATNR AND OD.SOBKZ = I.SOBKZ AND OI.PO_NO = I.EBELN AND OI.PO_ITEM_NO = I.EBELP AND OI.DEL != 'X'
	),0) QTY1, --已创单数量	
	NVL((SELECT SUM(RE.IN_QTY) FROM WMS_IN_RECEIPT RE WHERE 
	RE.WERKS = #{WERKS} AND RE.WH_NUMBER = #{WH_NUMBER} AND ((RE.MATNR = I.MATNR AND RE.SOBKZ = I.SOBKZ))
	<if test="LGORT !=null and LGORT !=''">
	AND RE.LGORT = #{LGORT} 
	</if>
	AND RE.LIFNR = H.LIFNR ),0) TOTAL_IN_QTY, --进仓数量
	NVL((SELECT SUM(S.FREEZE_QTY) FROM WMS_CORE_STOCK S 
	WHERE S.WERKS = #{WERKS} AND S.WH_NUMBER = #{WH_NUMBER}  AND ((S.MATNR = I.MATNR AND S.SOBKZ = I.SOBKZ))
	<if test="LGORT !=null and LGORT !=''">
	AND S.LGORT = #{LGORT} 
	</if>
	AND S.LIFNR = H.LIFNR 
	),0) FREEZE_QTY,	--冻结数量
	NVL((SELECT DISTINCT S.MEINS FROM WMS_CORE_STOCK S 
	WHERE S.WERKS = #{WERKS} AND S.WH_NUMBER = #{WH_NUMBER}  AND ((S.MATNR = I.MATNR AND S.SOBKZ = I.SOBKZ))
	<if test="LGORT !=null and LGORT !=''">
	AND S.LGORT = #{LGORT} 
	</if>
	AND S.LIFNR = H.LIFNR
	),0) S_UNIT,
	(SELECT WM_CONCAT(S.BATCH) FROM WMS_CORE_STOCK S 
	WHERE S.WERKS = #{WERKS} AND S.WH_NUMBER = #{WH_NUMBER} AND ((S.MATNR = I.MATNR AND S.SOBKZ = I.SOBKZ))
	<if test="LGORT !=null and LGORT !=''">
	AND S.LGORT = #{LGORT} 
	</if>
	AND S.LIFNR = H.LIFNR 
	) BATCHS,
	NVL((
	SELECT SUM(NVL(OD.RETURN_QTY,0)) FROM WMS_OUT_RETURN_ITEM_D OD
	LEFT JOIN WMS_OUT_RETURN_ITEM OI ON OD.RETURN_NO = OI.RETURN_NO AND OD.RETURN_ITEM_NO = OI.RETURN_ITEM_NO
	WHERE OI.PO_NO = I.EBELN AND OI.PO_ITEM_NO = I.EBELP AND OI.ITEM_STATUS = '00' AND OI.DEL != 'X'
	),0) RETURN_QTY
	FROM WMS_SAP_PO_ITEM I LEFT JOIN WMS_SAP_PO_HEAD H ON I.EBELN = H.EBELN WHERE I.EBELN = #{PONO} 
	AND (SELECT WM_CONCAT(S.BATCH) FROM WMS_CORE_STOCK S 
	WHERE S.WERKS = #{WERKS} AND S.WH_NUMBER = #{WH_NUMBER} AND ((S.MATNR = I.MATNR AND S.SOBKZ = I.SOBKZ))
	<if test="LGORT !=null and LGORT !=''">
	AND S.LGORT = #{LGORT} 
	</if>
	AND S.LIFNR = H.LIFNR 
	) IS NOT NULL 
	ORDER BY I.EBELP,I.MATNR
	</select>
	<select id="getWareHouseOutData28" parameterType="Map" resultType="Map">
	SELECT S.ID,S.MATNR,S.MAKTX,S.BATCH,S.LGORT,'' AS MEMO,
	NVL((SELECT DISTINCT T.MEINS FROM WMS_CORE_STOCK T WHERE T.WERKS = 'C161' AND T.WH_NUMBER = 'C161' AND T.BATCH = S.BATCH
	AND ((T.MATNR = I.MATNR AND T.SOBKZ = I.SOBKZ)) 
	),0) AS MEINS,S.SOBKZ,S.F_BATCH,I.EBELP,
	S.LIFNR,S.LIKTX,S.RECEIPT_NO,S.RECEIPT_ITEM_NO,I.UMREN,I.UMREZ,NVL(I.MEINS,'0') AS UNIT,
	NVL((SELECT SUM(T.FREEZE_QTY) FROM WMS_CORE_STOCK T WHERE T.WERKS = #{WERKS} AND T.WH_NUMBER = #{WH_NUMBER} AND T.BATCH = S.BATCH
	AND ((T.MATNR = I.MATNR AND T.SOBKZ = I.SOBKZ))
	),0) AS FREEZE_QTY,'0' AS QTY1,
	#{PONO} AS PONO,I.BEDNR,I.EBELN ,
	NVL((
	SELECT SUM(IR.IN_QTY) IN_QTY FROM WMS_IN_RECEIPT IR WHERE IR.PO_NO = #{PONO} AND 
	IR.MATNR = S.MATNR AND IR.SOBKZ = S.SOBKZ
	),0) IN_QTY,
	(SELECT COUNT(*) FROM WMS_C_PLANT_BUSINESS WHERE WERKS = S.WERKS AND  BUSINESS_CODE IN 
	(SELECT BUSINESS_CODE FROM WMS_C_WMS_BUSINESS WHERE BUSINESS_CLASS = '05')) PC_COUNT,
	NVL((
	SELECT SUM(NVL(OD.RETURN_QTY,0)) FROM WMS_OUT_RETURN_ITEM_D OD
	LEFT JOIN WMS_OUT_RETURN_ITEM OI ON OD.RETURN_NO = OI.RETURN_NO AND OD.RETURN_ITEM_NO = OI.RETURN_ITEM_NO
	WHERE OI.PO_NO = #{PONO} AND OI.MAKTX = S.MATNR AND OD.SOBKZ = S.SOBKZ  AND OI.DEL !='X'
	),0) RETURN_QTY,W.BARCODE_FLAG,S.BUSINESS_TYPE,S.ASNNO,S.ASNITM
	FROM WMS_IN_RECEIPT S 
	LEFT JOIN WMS_SAP_PO_ITEM I ON S.MATNR = I.MATNR AND S.SOBKZ = I.SOBKZ AND TO_NUMBER(I.EBELP) = TO_NUMBER(S.PO_ITEM_NO)
	LEFT JOIN WMS_C_WH W ON S.WERKS = W.WERKS AND S.WH_NUMBER = W.WH_NUMBER
	WHERE 
	S.WERKS = #{WERKS} AND S.WH_NUMBER = #{WH_NUMBER} AND NVL(S.IN_QTY,0)>0 
	AND ((S.MATNR = #{MATNR} AND S.SOBKZ = #{SOBKZ}))
	AND S.LIFNR = #{LIFNR} AND I.EBELN = #{PONO} AND S.PO_ITEM_NO =#{EBELP}
	
	AND NVL((SELECT SUM(T.FREEZE_QTY) FROM WMS_CORE_STOCK T WHERE T.WERKS = #{WERKS} AND T.WH_NUMBER = #{WH_NUMBER} AND T.BATCH = S.BATCH
	AND ((T.MATNR = I.MATNR AND T.SOBKZ = I.SOBKZ))
	),0) > 0
	
	ORDER BY I.EBELP,I.MATNR
	</select>
	
	<select id="getWareHouseOutData27" parameterType="Map" resultType="Map">
	SELECT S.MATNR,S.MAKTX,S.FREEZE_QTY,S.BATCH,S.BIN_CODE,S.LGORT,'' AS MEMO,S.MEINS,S.SOBKZ,S.F_BATCH,
	S.LIFNR,S.LIKTX,S.FREEZE_QTY AS QTY1,#{KETUI} AS KETUI,
	(SELECT COUNT(*) FROM WMS_C_PLANT_BUSINESS WHERE WERKS = S.WERKS AND  BUSINESS_CODE IN 
	(SELECT BUSINESS_CODE FROM WMS_C_WMS_BUSINESS WHERE BUSINESS_CLASS = '05')) PC_COUNT,
	#{SAP_OUT_NO} AS SAP_OUT_NO,#{VBELN} AS VBELN,#{POSNR} AS POSNR,
	#{VGBEL} AS VGBEL,#{VGPOS} AS VGPOS,#{GROUP} AS DA_GROUP,W.BARCODE_FLAG
	FROM WMS_CORE_STOCK S
	LEFT JOIN WMS_C_WH W ON S.WERKS = W.WERKS AND S.WH_NUMBER = W.WH_NUMBER
	WHERE S.WERKS = #{WERKS} AND S.WH_NUMBER = #{WH_NUMBER} 
	AND (S.MATNR = #{MATNR} AND S.SOBKZ = 'Z')
	AND S.LIFNR = #{LIFNR} AND S.FREEZE_QTY > 0
	<if test="LGORT !=null and LGORT !=''">
	AND S.LGORT = #{LGORT} 
	</if>
	</select>
	
	<select id="getPlantBucks" parameterType="String" resultType="String">
	SELECT BUKRS FROM WMS_SAP_PLANT WHERE WERKS = #{WERKS}
	</select>
	
	<select id="getWareHouseOutData31" parameterType="Map" resultType="Map">
	SELECT I.ID IID,S.ID SID,I.INBOUND_NO,I.INBOUND_ITEM_NO,I.IO_NO,I.WERKS,I.WH_NUMBER,
	I.LGORT,I.MATNR,I.MAKTX,I.BIN_CODE,I.UNIT,I.IN_QTY,NVL(I.TRY_QTY,0) TRY_QTY,NVL(I.QTY_CANCEL,0) QTY_CANCEL,I.BOX_COUNT,I.FULL_BOX_QTY,
	I.BATCH,I.SOBKZ,I.CREATOR,I.CREATE_DATE,NVL(S.FREEZE_QTY,0) FREEZE_QTY,
	(SELECT COUNT(*) FROM WMS_C_PLANT_BUSINESS WHERE WERKS = I.WERKS AND  BUSINESS_CODE IN 
	(SELECT BUSINESS_CODE FROM WMS_C_WMS_BUSINESS WHERE BUSINESS_CLASS = '06')) PC_COUNT,
	(SELECT NVL(SUM(NVL(OD.RETURN_QTY,0)),0) FROM WMS_OUT_RETURN_ITEM_D OD
	LEFT JOIN WMS_OUT_RETURN_ITEM OI ON OD.RETURN_NO = OI.RETURN_NO AND OD.RETURN_ITEM_NO = OI.RETURN_ITEM_NO
	WHERE OI.WERKS = I.WERKS AND OI.MATNR = I.MATNR AND OI.IO_NO=I.IO_NO AND OD.BATCH = I.BATCH 
	AND OD.SOBKZ = I.SOBKZ AND OI.ITEM_STATUS = '00' AND OI.DEL !='X') AS CD_QTY,W.BARCODE_FLAG
	FROM WMS_IN_INBOUND_ITEM I 
	LEFT JOIN WMS_CORE_STOCK S ON S.WERKS=I.WERKS AND S.WH_NUMBER=I.WH_NUMBER AND S.MATNR=I.MATNR 
	AND S.SOBKZ=I.SOBKZ AND S.BATCH=I.BATCH
	<if test="LGORT !=null and LGORT !=''">
	AND S.LGORT=#{LGORT}
	</if>
	<if test="MATNR !=null and MATNR !='(\'\')'">
	AND I.MATNR IN ${MATNR}
	</if>
	LEFT JOIN WMS_C_WH W ON I.WERKS = W.WERKS AND I.WH_NUMBER = W.WH_NUMBER
	WHERE I.WERKS=#{WERKS} AND I.WH_NUMBER = #{WH_NUMBER} AND I.IO_NO = #{IO_NO} AND I.DEL != 'X'
	AND NVL(S.FREEZE_QTY,0) >0
	</select>
	
	<select id="getWareHouseOutData37" parameterType="Map" resultType="Map">
	SELECT I.MATNR,I.MAKTX,I.IN_QTY,NVL(S.FREEZE_QTY,0) AS FREEZE_QTY,NVL(I.QTY_CANCEL,0) AS QTY_CANCEL,S.F_BATCH,S.BATCH,S.BIN_CODE,S.LGORT,
	'' AS MEMO,I.UNIT,I.MO_NO,I.MO_ITEM_NO,I.IO_NO,I.LIFNR,I.LIKTX,I.SOBKZ,'' AS PO,'' AS EBELP,I.CREATE_DATE,
	I.INBOUND_NO,I.INBOUND_ITEM_NO,
	(SELECT COUNT(*) FROM WMS_C_PLANT_BUSINESS WHERE WERKS = I.WERKS AND  BUSINESS_CODE IN 
	(SELECT BUSINESS_CODE FROM WMS_C_WMS_BUSINESS WHERE BUSINESS_CLASS = '06')) PC_COUNT,
	--已创单数量
	(SELECT NVL(SUM(NVL(OD.RETURN_QTY,0)),0) FROM WMS_OUT_RETURN_ITEM_D OD
	LEFT JOIN WMS_OUT_RETURN_ITEM OI ON OD.RETURN_NO = OI.RETURN_NO AND OD.RETURN_ITEM_NO = OI.RETURN_ITEM_NO
	WHERE OI.WERKS = I.WERKS AND OI.MATNR = I.MATNR AND NVL(OD.F_BATCH,'0') = NVL(I.F_BATCH,'0') AND OD.BATCH = I.BATCH 
		AND OD.SOBKZ = I.SOBKZ AND OI.ITEM_STATUS = '00' AND OI.DEL !='X') AS CD_QTY,W.BARCODE_FLAG
	FROM WMS_IN_INBOUND_ITEM I
	LEFT JOIN WMS_CORE_STOCK S ON S.WERKS = I.WERKS AND S.WH_NUMBER = I.WH_NUMBER AND S.MATNR = I.MATNR AND S.SOBKZ = I.SOBKZ
	AND S.BATCH = I.BATCH
	LEFT JOIN WMS_C_WH W ON I.WERKS = W.WERKS AND I.WH_NUMBER = W.WH_NUMBER
	WHERE I.WERKS = #{WERKS} AND I.WH_NUMBER = #{WH_NUMBER} AND I.MATNR = #{MATNR} AND I.IO_NO = #{IO_NO}
	AND NVL(S.FREEZE_QTY,0)>0
	</select>
	<select id="getWareHouseOutData33" parameterType="Map" resultType="Map">
	SELECT T.MATNR,T.MAKTX,SUM(T.IN_QTY) IN_QTY,T.FREEZE_QTY,T.QTY_CANCEL,T.F_BATCH,T.BATCH,T.BIN_CODE,T.LGORT,  
	T.MEMO,T.UNIT,T.MO_NO,T.MO_ITEM_NO,T.COST_CENTER,T.LIFNR,T.LIKTX,T.SOBKZ,T.PO,T.EBELP,
	MIN(T.CREATE_DATE) CREATE_DATE,MAX(T.INBOUND_NO) INBOUND_NO,MAX(T.INBOUND_ITEM_NO) INBOUND_ITEM_NO, 
	T.PC_COUNT,T.CD_QTY,T.BARCODE_FLAG
	FROM (
	
	SELECT I.MATNR,I.MAKTX,I.IN_QTY,NVL(S.FREEZE_QTY,0) AS FREEZE_QTY,NVL(I.QTY_CANCEL,0) AS QTY_CANCEL,S.F_BATCH,S.BATCH,S.BIN_CODE,S.LGORT,
	'' AS MEMO,I.UNIT,I.MO_NO,I.MO_ITEM_NO,I.COST_CENTER,I.LIFNR,I.LIKTX,I.SOBKZ,'' AS PO,'' AS EBELP,I.CREATE_DATE,
	I.INBOUND_NO,I.INBOUND_ITEM_NO,
	(SELECT COUNT(*) FROM WMS_C_PLANT_BUSINESS WHERE WERKS = I.WERKS AND  BUSINESS_CODE IN 
	(SELECT BUSINESS_CODE FROM WMS_C_WMS_BUSINESS WHERE BUSINESS_CLASS = '05')) PC_COUNT,
	--已创单数量
	(SELECT NVL(SUM(NVL(OD.RETURN_QTY,0)),0) FROM WMS_OUT_RETURN_ITEM_D OD
	LEFT JOIN WMS_OUT_RETURN_ITEM OI ON OD.RETURN_NO = OI.RETURN_NO AND OD.RETURN_ITEM_NO = OI.RETURN_ITEM_NO
	WHERE OI.WERKS = I.WERKS AND OI.MATNR = I.MATNR AND NVL(OD.F_BATCH,'0') = NVL(I.F_BATCH,'0') AND OD.BATCH = I.BATCH 
		AND OD.SOBKZ = I.SOBKZ AND OI.ITEM_STATUS = '00' AND OI.DEL !='X') AS CD_QTY,W.BARCODE_FLAG
	FROM WMS_IN_INBOUND_ITEM I
	LEFT JOIN WMS_CORE_STOCK S ON S.WERKS = I.WERKS AND S.WH_NUMBER = I.WH_NUMBER AND S.MATNR = I.MATNR AND S.SOBKZ = I.SOBKZ
	AND S.BATCH = I.BATCH AND S.LGORT = I.LGORT
	LEFT JOIN WMS_C_WH W ON I.WERKS = W.WERKS AND I.WH_NUMBER = W.WH_NUMBER
	WHERE I.WERKS = #{WERKS} AND I.WH_NUMBER = #{WH_NUMBER} AND I.MATNR = #{MATNR} AND I.COST_CENTER = #{COSTCENTER}
	<if test="LGORT !=null and LGORT !=''">
	AND S.LGORT=#{LGORT}
	</if>
	AND NVL(S.FREEZE_QTY,0)>0
	
	) T
	GROUP BY T.MATNR,T.MAKTX,T.FREEZE_QTY,T.QTY_CANCEL,T.F_BATCH,T.BATCH,T.BIN_CODE,T.LGORT,  
	T.MEMO,T.UNIT,T.MO_NO,T.MO_ITEM_NO,T.COST_CENTER,T.LIFNR,T.LIKTX,T.SOBKZ,T.PO,T.EBELP,T.INBOUND_ITEM_NO, 
	T.PC_COUNT,T.CD_QTY,T.BARCODE_FLAG
	</select>
	<select id="getWareHouseOutData34" parameterType="Map" resultType="Map">
	SELECT I.MATNR,I.MAKTX,I.IN_QTY,NVL(S.FREEZE_QTY,0) AS FREEZE_QTY,NVL(I.QTY_CANCEL,0) AS QTY_CANCEL,S.F_BATCH,S.BATCH,S.BIN_CODE,S.LGORT,
	'' AS MEMO,I.UNIT,I.MO_NO,I.MO_ITEM_NO,I.WBS,I.LIFNR,I.LIKTX,I.SOBKZ,'' AS PO,'' AS EBELP,I.CREATE_DATE,
	I.INBOUND_NO,I.INBOUND_ITEM_NO,
	(SELECT COUNT(*) FROM WMS_C_PLANT_BUSINESS WHERE WERKS = I.WERKS AND  BUSINESS_CODE IN 
	(SELECT BUSINESS_CODE FROM WMS_C_WMS_BUSINESS WHERE BUSINESS_CLASS = '05')) PC_COUNT,
	--已创单数量
	(SELECT NVL(SUM(NVL(OD.RETURN_QTY,0)),0) FROM WMS_OUT_RETURN_ITEM_D OD
	LEFT JOIN WMS_OUT_RETURN_ITEM OI ON OD.RETURN_NO = OI.RETURN_NO AND OD.RETURN_ITEM_NO = OI.RETURN_ITEM_NO
	WHERE OI.WERKS = I.WERKS AND OI.MATNR = I.MATNR AND NVL(OD.F_BATCH,'0') = NVL(I.F_BATCH,'0') AND OD.BATCH = I.BATCH 
		AND OD.SOBKZ = I.SOBKZ AND OI.ITEM_STATUS = '00' AND OI.DEL !='X') AS CD_QTY,W.BARCODE_FLAG
	FROM WMS_IN_INBOUND_ITEM I
	LEFT JOIN WMS_CORE_STOCK S ON S.WERKS = I.WERKS AND S.WH_NUMBER = I.WH_NUMBER AND S.MATNR = I.MATNR AND S.SOBKZ = I.SOBKZ
	AND S.BATCH = I.BATCH 
	LEFT JOIN WMS_C_WH W ON I.WERKS = W.WERKS AND I.WH_NUMBER = W.WH_NUMBER
	WHERE I.WERKS = #{WERKS} AND I.WH_NUMBER = #{WH_NUMBER} AND I.MATNR = #{MATNR} AND I.WBS = #{WBS}
	AND NVL(S.FREEZE_QTY,0)>0
	</select>
	
	<select id="getWmsKetuiQty27" parameterType="Map" resultType="Map">
	SELECT S.ID,
	NVL((SELECT SUM(NVL(FREEZE_QTY,0)) AS TOTALFREEZE FROM WMS_CORE_STOCK 
	WHERE WERKS = #{WERKS} AND WH_NUMBER = #{WH_NUMBER} AND MATNR = #{MATNR}),0) AS TOTALFREEZE,
	NVL((SELECT SUM(NVL(TOTAL_RETURN_QTY,0)) AS RETURN_QTY FROM WMS_OUT_RETURN_ITEM WHERE ITEM_STATUS = '00' AND BUSINESS_TYPE = '05' AND DEL != 'X' 
	AND BATCH = S.BATCH AND WERKS = S.WERKS AND MATNR = S.MATNR),0) AS QTY1 --已创单数量
	FROM WMS_CORE_STOCK S WHERE S.WERKS = #{WERKS} AND S.WH_NUMBER = #{WH_NUMBER} AND S.MATNR = #{MATNR}
	AND S.LIFNR = #{LIFNR}
	</select>
	
	<select id="getWareHouseOutPickupData" parameterType="Map" resultType="Map">
	SELECT I.WERKS,I.WH_NUMBER,I.RECEIPT_ITEM_NO,I.MATNR,I.MAKTX,D.RETURN_QTY,NVL(S.FREEZE_QTY,0) AS FREEZE_QTY,
	NVL(D.RETURN_QTY,0) AS QTY1,D.BATCH,I.UNIT,D.SOBKZ,S.LIFNR,S.LIKTX,S.LGORT,I.BUSINESS_NAME,I.BUSINESS_TYPE,
	S.BIN_CODE,I.ITEM_STATUS,H.RETURN_STATUS,I.RETURN_NO,I.RETURN_ITEM_NO,I.ID AS I_ID,S.ID AS S_ID,D.ID AS D_ID,
	NVL(B.BIN_CODE,'0') AS BIN_CODE_XJ,I.PICK_FLAG,H.DEL,
	I.PO_NO,I.PO_ITEM_NO,NVL(P.MEINS,I.UNIT) MEINS,NVL(P.LMEIN,I.UNIT) LMEIN,NVL(P.UMREN,'1') UMREN,NVL(P.UMREZ,'1') UMREZ
	FROM WMS_OUT_RETURN_ITEM_D D
	LEFT JOIN WMS_OUT_RETURN_ITEM I ON D.RETURN_NO = I.RETURN_NO AND D.RETURN_ITEM_NO = I.RETURN_ITEM_NO
	LEFT JOIN WMS_CORE_STOCK S ON S.WERKS = I.WERKS AND S.WH_NUMBER = I.WH_NUMBER AND S.MATNR = D.MATNR AND S.SOBKZ = D.SOBKZ		
			AND S.BATCH = D.BATCH AND S.LGORT = D.LGORT AND S.LIFNR = D.LIFNR 
	LEFT JOIN WMS_OUT_RETURN_HEAD H ON H.RETURN_NO = I.RETURN_NO	
	LEFT JOIN WMS_CORE_WH_BIN B ON B.WH_NUMBER = H.WH_NUMBER AND BIN_TYPE='03' AND B.DEL != 'X'
	LEFT JOIN WMS_SAP_PO_ITEM P ON P.EBELN = I.PO_NO AND P.EBELP = I.PO_ITEM_NO
	WHERE I.RETURN_NO = #{OUT_NO} AND I.WERKS = #{WERKS} AND I.WH_NUMBER = #{WH_NUMBER}
	<if test="STATUS !=null and STATUS !=''">
	AND I.ITEM_STATUS = #{STATUS}
	</if>
	</select>
	
	<insert id="insertOutPickupData" parameterType="Map">
	INSERT INTO WMS_OUT_PICKING
	(ID, PICK_NO, PICK_ITEM_NO, REFERENCE_DELIVERY_NO, REFERENCE_DELIVERY_ITEM,
	BUSINESS_CODE, 
	BUSINESS_NAME, BUSINESS_TYPE, WERKS, WH_NUMBER, WT_STATUS, ITEM_TEXT, 
	DEL, MATNR, MAKTX, UNIT, LIFNR, BIN_CODE, LGORT, BIN_CODE_XJ, QTY, 
	QTY_LOCK, BATCH, HANDOVER_QTY, HANDOVER_QTY_LOCK, LGORT_RECEIVE, SOBKZ, 
	HX_FLAG, RECEIVER, HANDOVER_DATE, CREATOR, CREATE_DATE, EDITOR, EDIT_DATE)
	VALUES(SEQ_WMS_OUT_PICKING.nextval, #{PICK_NO}, #{PICK_ITEM_NO}, #{REF_BUSINESS_NO}, #{REF_BUSINESS_ITEM_NO}, 
	(SELECT BUSINESS_CODE FROM WMS_C_WMS_BUSINESS WHERE BUSINESS_CLASS = '05' AND BUSINESS_NAME = #{BUSINESS_NAME}
	AND BUSINESS_TYPE = #{BUSINESS_TYPE} AND SOBKZ = #{SOBKZ}), 
	#{BUSINESS_NAME}, #{BUSINESS_TYPE}, #{WERKS}, #{WH_NUMBER}, #{REQ_ITEM_STATUS}, #{ITEM_TEXT}, 
	#{DEL}, #{MATNR}, #{MAKTX}, #{UNIT}, #{LIFNR}, #{BIN_CODE}, #{LGORT}, #{BIN_CODE_XJ}, #{QTY}, 
	#{QTY_LOCK}, #{BATCH}, #{HANDOVER_QTY}, #{HANDOVER_QTY_LOCK}, #{LGORT_RECEIVE}, #{SOBKZ}, 
	#{HX_FLAG}, #{RECEIVER}, #{HANDOVER_DATE}, #{CREATOR}, #{CREATE_DATE}, #{EDITOR}, #{EDIT_DATE})
	</insert>
	<update id="updateStockQty" parameterType="Map">
	UPDATE WMS_CORE_STOCK SET FREEZE_QTY = FREEZE_QTY - ${QTY} ,XJ_QTY = NVL(XJ_QTY,0) + ${QTY},
	XJ_BIN_CODE = #{XJ_BIN_CODE} WHERE ID = #{S_ID}
	</update>
	<select id="getStockFreezeQtyByID" parameterType="String" resultType="int">
	SELECT NVL(SUM(FREEZE_QTY),0) AS FREEZE_QTY FROM WMS_CORE_STOCK WHERE ID = #{S_ID}
	</select>
	<update id="delOutPickingData" parameterType="Map">
	UPDATE WMS_OUT_PICKING SET DEL = 'X' WHERE REFERENCE_DELIVERY_NO = #{REF_BUSINESS_NO} AND REFERENCE_DELIVERY_ITEM = #{REF_BUSINESS_ITEM_NO}
	</update>
	<update id="updateOutReturnItemDetail" parameterType="Map">
	UPDATE WMS_OUT_RETURN_ITEM_D SET XJ_QTY = 0 , 
	</update>
	
	<update id="updateOutPickingHandoverQty" parameterType="Map">
	UPDATE WMS_OUT_PICKING SET HANDOVER_QTY = #{QTY1} WHERE ID = #{P_ID}
	</update>
	<update id="updateOutReturnItemRealReturnQty" parameterType="Map">
	UPDATE WMS_OUT_RETURN_ITEM SET TOTAL_RETURN_QTY = #{QTY1} WHERE ID=#{IID}
	</update>
	<update id="updateStockXJFreezeQty" parameterType="Map">
	UPDATE WMS_CORE_STOCK SET XJ_QTY = XJ_QTY - ${RETURN_QTY} ,FREEZE_QTY = FREEZE_QTY + (${RETURN_QTY} - ${QTY1})
	WHERE WERKS = #{WERKS} AND MATNR = #{MATNR} AND SOBKZ = #{SOBKZ} AND BATCH = #{BATCH}
	</update>
	<update id="updateWareHouseReturnHeadStatus" parameterType="Map">
	UPDATE WMS_OUT_RETURN_HEAD SET RETURN_STATUS = '03' WHERE RETURN_NO = #{RETURN_NO} AND (DEL = '0' OR DEL IS NULL)
	</update>
	<update id="updateWareHouseReturnItemStatus" parameterType="Map">
	UPDATE WMS_OUT_RETURN_ITEM SET ITEM_STATUS = '03' WHERE RETURN_NO = #{RETURN_NO} AND (DEL = '0' OR DEL IS NULL)
	</update>
	<update id="updateWareHouseReturnPickingStatus" parameterType="Map">
	UPDATE WMS_OUT_PICKING SET WT_STATUS = '03' WHERE REFERENCE_DELIVERY_NO = #{RETURN_NO} AND (DEL = '0' OR DEL IS NULL)
	</update>
	
	<select id="getSapMoGroupForWareHouseOutData30" parameterType="Map" resultType="Map">
	SELECT I.MATNR,I.POSNR,H.WERKS,I.AUFNR FROM WMS_SAP_MO_ITEM I 
	LEFT JOIN WMS_SAP_MO_HEAD H ON I.AUFNR = H.AUFNR
	WHERE I.AUFNR = #{AUFNR} AND H.WERKS = #{WERKS}
	</select>
	
	<select id="getInboundDataForWareHouseOutData30" parameterType="Map" resultType="Map">
	SELECT I.MATNR,I.MAKTX,I.IN_QTY,NVL(S.FREEZE_QTY,0) AS FREEZE_QTY,I.BATCH,I.BIN_CODE,I.LGORT,'' AS MEMO,I.UNIT,
	I.MO_NO,I.MO_ITEM_NO,I.CREATE_DATE, NVL(I.QTY_CANCEL,0) AS QTY_CANCEL,
	I.LIFNR,I.LIKTX,I.SOBKZ,I.F_BATCH,I.BATCH,'' AS PO,'' AS EBELP,I.MO_NO,I.MO_ITEM_NO,
	I.INBOUND_NO,I.INBOUND_ITEM_NO,
	(SELECT COUNT(*) FROM WMS_C_PLANT_BUSINESS WHERE WERKS = I.WERKS AND  BUSINESS_CODE IN 
	(SELECT BUSINESS_CODE FROM WMS_C_WMS_BUSINESS WHERE BUSINESS_CLASS = '06')) PC_COUNT,
	--已创单数量	
	(SELECT NVL(SUM(RD.RETURN_QTY-NVL(RD.XJ_QTY,0)),0) AS RE_QTY 
	FROM WMS_OUT_RETURN_ITEM_D RD WHERE RD.MATNR = I.MATNR AND NVL(RD.F_BATCH,'0') = NVL(I.F_BATCH,'0') AND RD.BATCH = I.BATCH 
	AND RD.SOBKZ = I.SOBKZ AND RD.DEL !='X') AS CD_QTY,	
	W.BARCODE_FLAG
	FROM WMS_IN_INBOUND_ITEM I
	LEFT JOIN WMS_CORE_STOCK S ON S.WERKS = I.WERKS AND S.WH_NUMBER = I.WH_NUMBER AND S.MATNR = I.MATNR AND S.SOBKZ = I.SOBKZ
	AND S.BATCH = I.BATCH
	LEFT JOIN WMS_C_WH W ON S.WERKS = W.WERKS AND S.WH_NUMBER = W.WH_NUMBER
	WHERE I.WERKS = #{WERKS} AND I.WH_NUMBER = #{WH_NUMBER} AND I.MATNR = #{MATNR} 
	AND I.MO_NO = #{MO_NO} AND I.MO_ITEM_NO = #{MO_ITEM_NO} AND NVL(S.FREEZE_QTY,0) >0
	</select>
	
	
	<select id="getSapMoCount" parameterType="Map" resultType="int">
	SELECT COUNT(*) AS MO_COUNT FROM WMS_SAP_MO_HEAD WHERE AUFNR = #{AUFNR} AND WERKS = #{WERKS}
	</select>
	<select id="getSapMoStatus" parameterType="Map" resultType="String">
	SELECT ISTAT_TXT FROM WMS_SAP_MO_HEAD WHERE AUFNR = #{AUFNR} AND WERKS = #{WERKS}
	</select>
	<select id="getPlantInfoByWerks" parameterType="Map" resultType="Map">
	SELECT * FROM WMS_C_WH WHERE WERKS = #{WERKS} AND WH_NUMBER = #{WH_NUMBER}
	</select>
	<select id="getMoHeadHxQty" parameterType="String" resultType="int">
	SELECT NVL(SUM(HX_QTY),0) AS HX_QTY FROM WMS_HX_MO_ITEM WHERE AUFNR = #{AUFNR}
	</select>
	<select id="getPoHxQty" parameterType="String" resultType="int">
	SELECT NVL(SUM(HX_QTY),0) AS HX_QTY FROM WMS_HX_PO WHERE EBELN = #{PONO}
	</select>
	
	<select id="getWmsReturnItemCountBySapOutNo" parameterType="String" resultType="int">
	SELECT COUNT(*) AS RETURN_COUNT FROM WMS_OUT_RETURN_ITEM WHERE SAP_OUT_NO = #{SAP_OUT_NO} AND DEL != 'X'
	</select>
	
	<resultMap type="Map" id="ReturnInfoByBarcodeMap">
		<result property="BARCODES"  column="BARCODES" jdbcType="CLOB" javaType = "java.lang.String" />
	</resultMap> 
	<select id="getReturnInfoByBarcode" parameterType="Map" resultMap="ReturnInfoByBarcodeMap">
	SELECT L.ID LID,R.ID RID,L.LABEL_NO,L.RECEIPT_NO,L.RECEIPT_ITEM_NO,L.LABEL_STATUS,L.WERKS,L.WH_NUMBER,L.MATNR,L.MAKTX,
	L.BIN_CODE,L.UNIT,L.SOBKZ,L.BATCH,L.LIFNR,L.LIKTX,L.BOX_QTY QTY3,L.BOX_QTY QTY2,R.BUSINESS_NAME,R.BUSINESS_TYPE,R.RECEIPT_QTY,
	R.F_BATCH,R.LGORT,R.PO_NO,R.PO_ITEM_NO,R.ASNNO,R.ASNITM,R.RECEIPT_DATE,B.SAP_MOVE_TYPE,W.BARCODE_FLAG,
	(SELECT NVL(WMSYS.WM_CONCAT(L.LABEL_NO),' ') LABEL_NOS FROM WMS_CORE_LABEL L 
	WHERE L.RECEIPT_NO = R.RECEIPT_NO AND L.RECEIPT_ITEM_NO = R.RECEIPT_ITEM_NO AND L.DEL != 'X') BARCODES
	FROM WMS_CORE_LABEL L
	LEFT JOIN WMS_IN_RECEIPT R ON L.RECEIPT_NO = R.RECEIPT_NO AND L.RECEIPT_ITEM_NO = R.RECEIPT_ITEM_NO AND R.BUSINESS_TYPE IN
	(SELECT CODE FROM SYS_DICT WHERE "TYPE" = 'BUSINESS_TYPE' AND DEL_FLAG !='X' AND CODE IN (
	SELECT DISTINCT BUSINESS_TYPE FROM WMS_C_WMS_BUSINESS WHERE 
	BUSINESS_NAME = 25))
	LEFT JOIN WMS_C_WMS_BUSINESS B ON R.BUSINESS_NAME = B.BUSINESS_NAME AND R.BUSINESS_TYPE = B.BUSINESS_TYPE
	AND B.SOBKZ = L.SOBKZ AND B.BUSINESS_CLASS = '04'
	LEFT JOIN WMS_C_WH W ON L.WERKS = W.WERKS AND L.WH_NUMBER = W.WH_NUMBER
	WHERE L.LABEL_NO = #{barCode} AND L.DEL != 'X' AND R.BUSINESS_TYPE IS NOT NULL
	</select>

</mapper>