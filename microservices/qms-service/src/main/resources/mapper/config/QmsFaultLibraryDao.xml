<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.byd.qms.modules.config.dao.QmsFaultLibraryDao">
	 
	 <select id="getListByPage" parameterType="Map" resultType="Map">
      SELECT D.ID,D.FAULT_CODE,D.FAULT_TYPE,D.FAULT_NAME,D.FAULT_CLASS,D.SERIOUS_LEVEL,
		      D.EDITOR,D.EDIT_DATE,D.CREATOR ,D.CREATE_DATE
		       FROM QMS_C_STANDARD_FAULT_LIBRARY D  WHERE 1=1
		         <if test="faultType != null and faultType !=''">
			        AND D.FAULT_TYPE=#{faultType} 
			      </if>
	              <if test="seriousLevel != null and seriousLevel !=''">
			        AND D.SERIOUS_LEVEL = #{seriousLevel}
			      </if>
			      <if test="faultName != null and faultName !=''">
			        AND D.FAULT_NAME LIKE CONCAT('%',#{faultName},'%')
			      </if>
			      ORDER BY D.CREATE_DATE DESC
         LIMIT #{start},#{limit}
    </select>
    <select id="getListCount" parameterType="Map" resultType="int">
         SELECT COUNT(1) FROM QMS_C_STANDARD_FAULT_LIBRARY D WHERE  1=1
		          <if test="faultType != null and faultType !=''">
			        AND D.FAULT_TYPE=#{faultType} 
			      </if>
	              <if test="seriousLevel != null and seriousLevel !=''">
			        AND D.SERIOUS_LEVEL = #{seriousLevel}
			      </if>
			      <if test="faultName != null and faultName !=''">
			        AND D.FAULT_NAME LIKE CONCAT('%',#{faultName},'%')
			      </if>
    </select>
    <select id="getById" parameterType="Long" resultType="Map">
      SELECT D.ID id,D.FAULT_CODE faultCode,D.FAULT_TYPE faultType,
        D.FAULT_NAME faultName,D.FAULT_CLASS faultClass,D.SERIOUS_LEVEL seriousLevel
		       FROM QMS_C_STANDARD_FAULT_LIBRARY D  WHERE ID=#{id}
    </select>
    <select id="getList" parameterType="Map" resultType="Map">
      SELECT D.ID,D.FAULT_CODE,D.FAULT_TYPE,D.FAULT_NAME,D.FAULT_CLASS,D.SERIOUS_LEVEL,
		      D.EDITOR,D.EDIT_DATE,D.CREATOR ,D.CREATE_DATE
		       FROM QMS_C_STANDARD_FAULT_LIBRARY D  WHERE 1=1
		          <if test="faultType != null and faultType !=''">
			        AND D.FAULT_TYPE=#{faultType} 
			      </if>
	              <if test="faultName != null and faultName !=''">
			        AND D.FAULT_NAME = #{faultName}
			      </if>
			      <if test="seriousLevel != null and seriousLevel !=''">
			        AND D.SERIOUS_LEVEL = #{seriousLevel}
			      </if>
    </select>
    <insert id="save" parameterType="Map"  useGeneratedKeys="true">
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into QMS_C_STANDARD_FAULT_LIBRARY
		(FAULT_CODE,FAULT_TYPE,FAULT_NAME,FAULT_CLASS,SERIOUS_LEVEL,CREATOR ,CREATE_DATE) values
			(#{faultCode},#{faultType},#{faultName},#{faultClass},#{seriousLevel},#{user},#{createDate})
	</insert>
	<update id="update" parameterType="Map">
			update QMS_C_STANDARD_FAULT_LIBRARY set FAULT_CODE=#{faultCode},FAULT_NAME=#{faultName},
			FAULT_TYPE=#{faultType},SERIOUS_LEVEL= #{seriousLevel},FAULT_CLASS=#{faultClass},
			editor=#{user},edit_date=#{editDate} where id=#{id}
	</update>
	<update id="delete" parameterType="Long">
			delete from QMS_C_STANDARD_FAULT_LIBRARY  where id=#{id}
	</update>
	 <select id="getMaxFaultCode" parameterType="String" resultType="int">
         SELECT max(CAST(substring(D.FAULT_CODE, LENGTH(#{faultCode})+1) AS SIGNED)) FROM QMS_C_STANDARD_FAULT_LIBRARY D
          WHERE  left(D.FAULT_CODE, LENGTH(#{faultCode}))  =#{faultCode}
    </select>
</mapper>